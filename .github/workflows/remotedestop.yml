name: 🖥️ REMOTE DESKTOP PC

on:
  workflow_dispatch:
    inputs:
      code:
        description: "🔑 Paste Chrome Remote Desktop Code (12 digits)"
        required: true

jobs:
  remote_desktop:
    name: 🚀 Remote Desktop PC Setup
    runs-on: windows-latest
    timeout-minutes: 43800 # 30 days

    steps:
    - name: 🔒 Disable Security Protections
      run: |
        Write-Host "🛡️ Disabling firewall profiles..."
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
          Write-Host "✅ Firewall disabled successfully"
        } catch {
          Write-Warning "⚠️ Failed to disable firewall - continuing..."
        }

    - name: 📦 Install Required Software
      run: |
        function Install-Software {
            param ([string]$packageName)
            $maxRetries = 3
            $retryCount = 0
            
            while ($retryCount -lt $maxRetries) {
                try {
                    Write-Host "🔧 Installing $packageName..."
                    choco install $packageName -y --ignore-checksums
                    Write-Host "✔️ $packageName installed"
                    return
                } catch {
                    $retryCount++
                    Write-Warning "🔄 Retrying $packageName ($retryCount/$maxRetries)"
                    Start-Sleep -Seconds 10
                }
            }
            throw "❌ Failed to install $packageName after $maxRetries attempts"
        }

        Install-Software -packageName "chrome-remote-desktop-host"
        Install-Software -packageName "googlechrome"

    - name: ⬇️ Download Tools Package
      continue-on-error: true
      run: |
        Write-Host "📥 Downloading software package..."
        $targetDir = "C:\Users\$Env:USERNAME\Documents\RemoteDesktopTools"
        
        try {
          if (-not (Test-Path $targetDir)) {
              New-Item -ItemType Directory -Path $targetDir -Force
          }
          
          Invoke-WebRequest -Uri "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download" `
              -OutFile "$targetDir\remote_tools.zip"
          
          Write-Host "📦 Extracting package..."
          7z x "$targetDir\remote_tools.zip" -o"$targetDir" -y
          Write-Host "✅ Extraction complete"
        } catch {
          Write-Error "❌ Download failed: $_"
          exit 1
        }

    - name: 🌐 Start Remote Desktop Service
      continue-on-error: true
      run: |
        Write-Host "🚀 Starting Chrome Remote Desktop..."
        $crdPaths = @(
            "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe",
            "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        )
        
        foreach ($path in $crdPaths) {
            if (Test-Path $path) {
                & $path
                Write-Host "✔️ Service started from $path"
                return
            }
        }
        Write-Warning "⚠️ Chrome Remote Desktop executable not found"

    - name: 📌 Create Desktop Shortcuts
      run: |
        Write-Host "📝 Creating desktop shortcuts..."
        $desktop = [Environment]::GetFolderPath("Desktop")
        
        @(
            @{
                Target = "C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe"
                Link = "$desktop\Free Fire.lnk"
            },
            @{
                Target = "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe"
                Link = "$desktop\Ninjaripper.lnk"
            },
            @{
                Target = "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe"
                Link = "$desktop\Noesis.lnk"
            }
        ) | ForEach-Object {
            if (Test-Path $_.Target) {
                New-Item -ItemType SymbolicLink -Path $_.Link -Target $_.Target -Force
                Write-Host "✔️ Created shortcut: $($_.Link)"
            } else {
                Write-Warning "⚠️ Target not found: $($_.Target)"
            }
        }

    - name: 🔗 Establish Remote Connection
      continue-on-error: true
      run: |
        Write-Host "🌍 Connecting to remote desktop..."
        $connectionCode = "${{ inputs.code }}"
        
        if ($connectionCode -match '^\d{12}$') {
            Write-Host "🔐 Using connection code: $connectionCode"
            Start-Process "chrome-remote-desktop-host" -ArgumentList "--code=$connectionCode --pin=123456"
        } else {
            Write-Error "❌ Invalid connection code format"
        }

    - name: ⏳ Maintain Active Session
      run: |
        Write-Host "⏰ Session will remain active for 30 days"
        $totalMinutes = 43800
        $startTime = Get-Date
        
        for ($i = $totalMinutes; $i -gt 0; $i--) {
            $elapsed = (Get-Date) - $startTime
            Write-Host "🟢 Session active | Time remaining: $($i) minutes | Elapsed: $($elapsed.ToString('dd\.hh\:mm'))"
            Start-Sleep -Seconds 60
        }
        
        Write-Host "🛑 Session timeout reached"

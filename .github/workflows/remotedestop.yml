name: üñ•Ô∏è REMOTE DESKTOP PC

on:
  workflow_dispatch:
    inputs:
      code:
        description: "üîë Paste Chrome Remote Desktop Code (12 digits)"
        required: true

jobs:
  remote_desktop:
    name: üöÄ Remote Desktop PC Setup
    runs-on: windows-latest
    timeout-minutes: 43800 # 30 days

    steps:
    - name: üîí Disable Security Protections
      run: |
        Write-Host "üõ°Ô∏è Disabling firewall profiles..."
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
          Write-Host "‚úÖ Firewall disabled successfully"
        } catch {
          Write-Warning "‚ö†Ô∏è Failed to disable firewall - continuing..."
        }

    - name: üì¶ Install Required Software
      run: |
        function Install-Software {
            param ([string]$packageName)
            $maxRetries = 3
            $retryCount = 0
            
            while ($retryCount -lt $maxRetries) {
                try {
                    Write-Host "üîß Installing $packageName..."
                    choco install $packageName -y --ignore-checksums
                    Write-Host "‚úîÔ∏è $packageName installed"
                    return
                } catch {
                    $retryCount++
                    Write-Warning "üîÑ Retrying $packageName ($retryCount/$maxRetries)"
                    Start-Sleep -Seconds 10
                }
            }
            throw "‚ùå Failed to install $packageName after $maxRetries attempts"
        }

        Install-Software -packageName "chrome-remote-desktop-host"
        Install-Software -packageName "googlechrome"

    - name: ‚¨áÔ∏è Download Tools Package
      continue-on-error: true
      run: |
        Write-Host "üì• Downloading software package..."
        $targetDir = "C:\Users\$Env:USERNAME\Documents\RemoteDesktopTools"
        $downloadUrl = "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download"
        $tempFile = "$targetDir\remote_tools.zip"
        
        try {
          # Create target directory if it doesn't exist
          if (-not (Test-Path $targetDir)) {
              New-Item -ItemType Directory -Path $targetDir -Force | Out-Null
          }
          
          # Alternative download method with better error handling
          $ProgressPreference = 'SilentlyContinue'
          $retryCount = 0
          $maxRetries = 3
          
          while ($retryCount -lt $maxRetries) {
              try {
                  Invoke-WebRequest -Uri $downloadUrl -OutFile $tempFile -UseBasicParsing
                  break
              } catch {
                  $retryCount++
                  if ($retryCount -ge $maxRetries) {
                      throw "‚ùå Download failed after $maxRetries attempts: $_"
                  }
                  Write-Warning "‚ö†Ô∏è Download attempt $retryCount failed. Retrying in 10 seconds..."
                  Start-Sleep -Seconds 10
              }
          }
          
          Write-Host "üì¶ Extracting package..."
          if (Test-Path $tempFile) {
              7z x $tempFile -o"$targetDir" -y -bso0
              Write-Host "‚úÖ Extraction complete"
          } else {
              throw "‚ùå Downloaded file not found"
          }
        } catch {
          Write-Warning "‚ö†Ô∏è Package download/extraction failed. Some features may not work."
          Write-Host "Continuing with setup..."
        }

    - name: üåê Start Remote Desktop Service
      continue-on-error: true
      run: |
        Write-Host "üöÄ Starting Chrome Remote Desktop..."
        $crdPaths = @(
            "${Env:ProgramFiles(x86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe",
            "${Env:ProgramFiles}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        )
        
        $serviceStarted = $false
        foreach ($path in $crdPaths) {
            if (Test-Path $path) {
                try {
                    Start-Process -FilePath $path -WindowStyle Hidden
                    Write-Host "‚úîÔ∏è Service started from $path"
                    $serviceStarted = $true
                    break
                } catch {
                    Write-Warning "‚ö†Ô∏è Failed to start service from $path"
                }
            }
        }
        
        if (-not $serviceStarted) {
            Write-Warning "‚ö†Ô∏è Chrome Remote Desktop executable not found or failed to start"
        }

    - name: üìå Create Desktop Shortcuts
      run: |
        Write-Host "üìù Creating desktop shortcuts..."
        $desktop = [Environment]::GetFolderPath("Desktop")
        
        @(
            @{
                Target = "C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe"
                Link = "$desktop\Free Fire.lnk"
            },
            @{
                Target = "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe"
                Link = "$desktop\Ninjaripper.lnk"
            },
            @{
                Target = "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe"
                Link = "$desktop\Noesis.lnk"
            }
        ) | ForEach-Object {
            if (Test-Path $_.Target) {
                try {
                    New-Item -ItemType SymbolicLink -Path $_.Link -Target $_.Target -Force
                    Write-Host "‚úîÔ∏è Created shortcut: $($_.Link)"
                } catch {
                    Write-Warning "‚ö†Ô∏è Failed to create shortcut: $($_.Link)"
                }
            } else {
                Write-Warning "‚ö†Ô∏è Target not found: $($_.Target)"
            }
        }

    - name: üîó Establish Remote Connection
      continue-on-error: true
      run: |
        Write-Host "üåç Connecting to remote desktop..."
        $connectionCode = "${{ inputs.code }}"
        
        # Validate code format
        if (-not ($connectionCode -match '^\d{12}$')) {
            Write-Warning "‚ö†Ô∏è Invalid connection code format - must be 12 digits"
            exit 0
        }
        
        # Find Chrome Remote Desktop executable
        $crdPaths = @(
            "${Env:ProgramFiles(x86)}\Google\Chrome Remote Desktop\CurrentVersion\chrome-remote-desktop-host.exe",
            "${Env:ProgramFiles}\Google\Chrome Remote Desktop\CurrentVersion\chrome-remote-desktop-host.exe"
        )
        
        foreach ($path in $crdPaths) {
            if (Test-Path $path) {
                try {
                    Write-Host "üîê Using connection code: $connectionCode"
                    Start-Process -FilePath $path -ArgumentList "--code=$connectionCode --pin=123456" -WindowStyle Hidden
                    Write-Host "‚úÖ Connection initiated successfully"
                    exit 0
                } catch {
                    Write-Warning "‚ö†Ô∏è Failed to start connection process: $_"
                }
            }
        }
        
        Write-Warning "‚ö†Ô∏è Chrome Remote Desktop host executable not found"

    - name: ‚è≥ Maintain Active Session
      run: |
        Write-Host "‚è∞ Session will remain active for 30 days"
        $totalMinutes = 43800
        $startTime = Get-Date
        
        for ($i = $totalMinutes; $i -gt 0; $i--) {
            $elapsed = (Get-Date) - $startTime
            Write-Host "üü¢ Session active | Time remaining: $($i) minutes | Elapsed: $($elapsed.ToString('dd\.hh\:mm'))"
            Start-Sleep -Seconds 60
        }
        
        Write-Host "üõë Session timeout reached"
